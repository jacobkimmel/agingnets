substr('testing', 3,5)
substr('testing',2,)
substr('testing',2,end)
substr('testing',2, 6)
substr('testing',2, 7)
substr('testing',2, -1)
library(stringr)
sub_str('testing', 2, -1)
str_sub('testing', 2, -1)
filename <- paste('plots/', str_sub(data_file, 6, -1), '_', 'ChiSq_Freq_Dist.png')
data_file <- 'data/phs000007.pha001970_pvals.PathwaySet--msigBIOCARTA_KEGG_REACTOME--sum.txt'
str_sub(data_file, 6, -1)
str_sub(data_file, 6, -9)
str_sub(data_file, 6, -10)
filenames <- list.files(data_dir, pattern = "*REACTOME--sum.txt", full.names = TRUE)
filenames('data/', pattern = "*REACTOME--sum.txt", full.names = TRUE)
filenames <- list.files('data/', pattern = "*REACTOME--sum.txt", full.names = TRUE)
filenames
library(stringr)
processPascal <- function(data_file){
df <- read.table(data_file, stringsAsFactors = FALSE)
names(df) <- df[1,]
df <- df[-c(1),]
df$chi2Pvalue <- as.numeric(df$chi2Pvalue)
df$empPvalue <- as.numeric(df$empPvalue)
# Sort based on each statistical mode
df.chi2sort <- df[order(df[,2]),]
df.empsort <- df[order(df[,3]),]
# Plot histogram of chi-squared p-vals
require(ggplot2)
filename <- paste('plots/', str_sub(data_file, 6, -10), '_', 'ChiSq_Freq_Dist.png', sep = '')
png(filename, width = 7, height = 5, units = 'in', res = 300)
print(
ggplot(data=df, aes(df$chi2Pvalue)) + geom_histogram() + labs(x='Chi-squared p-value', y='Frequency', title='Pathway Analysis P-value distribution')
)
dev.off()
}
batchprocess <- function(data_dir) {
filenames <- list.files(data_dir, pattern = "*REACTOME--sum.txt", full.names = TRUE)
res <- lapply(filenames, processPascal)
}
batch_process('data/')
batchprocess('data/')
filenames <- list.files('data', pattern = "*REACTOME--sum.txt", full.names = TRUE)
filenames
batchprocess('data')
batchprocess('data')
df.chi2sort
data_file <- 'data/phs000007.pha001970.PathwaySet--msigBIOCARTA_KEGG_REACTOME--sum.txt'
df <- read.table(data_file, stringsAsFactors = FALSE)
names(df) <- df[1,]
df <- df[-c(1),]
df$chi2Pvalue <- as.numeric(df$chi2Pvalue)
df$empPvalue <- as.numeric(df$empPvalue)
df.chi2sort <- df[order(df[,2]),]
df.empsort <- df[order(df[,3]),]
df.chi2sort
df.chi2sort[1:10,]
df.chi2sort[1:50,]
which(df.chi2sort<0.05)[2]
df.chi2sort[1079,]
df.chi2sort[1079]
df.chi2sort[1079,2]
which(df.chi2sort$chi2Pvalue<0.05)
df.chi2sort[63,]
which(df.chi2sort$chi2Pvalue<>0.05)
which(df.chi2sort$chi2Pvalue<0.05)
length(which(df.chi2sort$chi2Pvalue<0.05))
df.chi2sort[1:63,1]
test <- data.frame()
test
typeof(df[1:63,1])
df[1:63,1]
as.vector(df[1:63,1])
type(as.vector(df[1:63,1]))
typeof(as.vector(df[1:63,1]))
enriched_pathways[,data_set_name] <- as.vector(enriched)
num_enriched <- length(which(df.chi2sort$chi2Pvalue<0.05))
enriched <- df.chi2sort[1:num_enriched,1]
enriched_pathways[,data_set_name] <- as.vector(enriched)
enriched_pathways <- data.frame()
enriched_pathways[,data_set_name] <- as.vector(enriched)
data_set_name <- str_sub(data_file, 6, -10)
enriched_pathways[,data_set_name] <- as.vector(enriched)
enriched_pathways$data_set_name <- as.vector(enriched)
filename <- paste('enriched/', data_set_name, '_', 'EnrichedPaths.txt', sep = '')
capture.output(enriched, file = filename)
capture.output(enriched, file = filename)
help(write)
print(
)
write(enriched, file = filename, sep = ',')
write(enriched, file = filename, sep = ',')
rbind(enriched_pathways, enriched)
test <- rbind(enriched_pathways, enriched)
test
summary(test)
names(test)
test <- rbind(test, enriched)
test
names(test)
test[,2]
as.data.frame(enriched)
merge(enriched_pathways, as.data.frame(enriched))
enriched_pathways
merge(enriched_pathways, as.data.frame(enriched))
enriched_pathways <- data.frame(matrix(NA, nrow = 100, ncol = 1))
merge(enriched_pathways, as.data.frame(enriched))
test <- merge(enriched_pathways, as.data.frame(enriched))
test
test[1,]
batchprocess <- function(data_dir) {
enriched_pathways <- data.frame(matrix(NA, nrow = 100, ncol = 1))
filenames <- list.files(data_dir, pattern = "*REACTOME--sum.txt", full.names = TRUE)
res <- lapply(filenames, processPascal)
}
library(stringr)
processPascal <- function(data_file){
df <- read.table(data_file, stringsAsFactors = FALSE)
names(df) <- df[1,]
df <- df[-c(1),]
df$chi2Pvalue <- as.numeric(df$chi2Pvalue)
df$empPvalue <- as.numeric(df$empPvalue)
# Sort based on each statistical mode
df.chi2sort <- df[order(df[,2]),]
df.empsort <- df[order(df[,3]),]
# Plot histogram of chi-squared p-vals
require(ggplot2)
data_set_name <- str_sub(data_file, 6, -10)
filename <- paste('plots/', data_set_name, '_', 'ChiSq_Freq_Dist.png', sep = '')
png(filename, width = 7, height = 5, units = 'in', res = 300)
print(
ggplot(data=df, aes(df$chi2Pvalue)) + geom_histogram() + labs(x='Chi-squared p-value', y='Frequency', title='Pathway Analysis P-value distribution')
)
dev.off()
# Determine which pathways are significantly enriched
num_enriched <- length(which(df.chi2sort$chi2Pvalue<0.05))
enriched <- df.chi2sort[1:num_enriched,1]
enriched_pathways <- merge(enriched_pathways, enriched)
filename <- paste('enriched/', data_set_name, '_', 'EnrichedPaths.txt', sep = '')
write(enriched, file = filename, sep = ',')
}
batchprocess('data')
batchprocess <- function(data_dir) {
enriched_pathways <- data.frame(matrix(NA, nrow = 100, ncol = 1))
filenames <- list.files(data_dir, pattern = "*REACTOME--sum.txt", full.names = TRUE)
res <- lapply(filenames, processPascal)
return(enriched_pathways)
}
enpath <- batchprocess('data')
enpath
read.table('enriched/phs000007.pha001970.PathwaySet--msigBIOCARTA_KEGG_REACTOME_EnrichedPaths.txt')
test <- read.table('enriched/phs000007.pha001970.PathwaySet--msigBIOCARTA_KEGG_REACTOME_EnrichedPaths.txt')
test
test[23]
test[23,]
test[]
test[,1]
test[2,1]
test <- read.table('enriched/phs000007.pha001970.PathwaySet--msigBIOCARTA_KEGG_REACTOME_EnrichedPaths.txt', header = FALSE)
test
test[1:10]
test[1:10,]
typeof(test)
rich_paths <- function(enriched_dir){
filenames <- list.files(data_dir, pattern = '*.txt', full.names = TRUE)
for (file in filenames){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=FALSE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=FALSE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
return(dataset)
}
rich_paths('enriched')
rich_paths <- function(enriched_dir){
filenames <- list.files(enriched_dir, pattern = '*.txt', full.names = TRUE)
for (file in filenames){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=FALSE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=FALSE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
return(dataset)
}
rich_paths('enriched')
test <- rich_paths('enriched')
test[1,]
View(test)
unlist(test)
table(unlist(test))
View(table(unlist(test)))
unlist(test)[,2]
unlist(test)
plot(table(unlist(test)))
enriched_paths <- rich_paths('enriched')
unlist(enriched_paths)
table(unlist(enriched_paths))
sort(table(unlist(enriched_paths)))
help(sort)
sort(table(unlist(enriched_paths)), decreasing = TRUE)
View(sort(table(unlist(enriched_paths)), decreasing = TRUE))
write(sort(table(unlist(enriched_paths)), decreasing = TRUE), 'enriched/EnrichedPathwaysAll.txt')
sort(unlist(enriched_paths))
View(sort(unlist(enriched_paths)))
View(enriched_paths)
View(enriched_paths)
View(enriched_paths)
View(enriched_pathways)
View(enriched_paths)
rownames(sort(unlist(enriched_paths)))
sort(table(unlist(enriched_paths))))
sort(table(unlist(enriched_paths)))
sort(table(unlist(enriched_paths)), decreasing = TRUE)
rownames(sort(table(unlist(enriched_paths)), decreasing = TRUE))
c1 <- rownames(sort(table(unlist(enriched_paths)), decreasing = TRUE))
tmp <- data.frame(c1)
tmp
c2 <- sort(table(unlist(enriched_paths)), decreasing = TRUE)
tmp <- rbind(tmp, c2)
tmp
c
c2
as.vector(c2)
tmp <- rbind(as.vector(c1), as.vector(c2))
tmp
tmp[1,]
tmp[,1]
tmp <- cbind(as.vector(c1), as.vector(c2))
tmp
tmp[1,]
write(tmp, 'enriched/EnrichedPathwaysGlobal.txt')
write(tmp, 'enriched/EnrichedPathwaysGlobal.txt', sep = '\t')
write.table(tmp, file = 'enriched/EnrichedPathwaysGlobal.txt', sep = '\t')
write.table(tmp, file = 'enriched/EnrichedPathwaysGlobal.txt', sep = ',')
write.table(tmp, file = 'enriched/EnrichedPathwaysGlobal.txt', sep = ',', col.names = FALSE)
write.table(tmp, file = 'enriched/EnrichedPathwaysGlobal.csv', sep = ',', col.names = FALSE, quote = FALSE)
data_file = '/Applications/PASCAL/output/GIANT_HEIGHT_Wood_et_al_2014_pvals.sum.genescores.chr22.txt'
df <- read.table(data_file)
df
df[1,10]
df[1:5,]
df <- read.table(data_file, header = TRUE)
df[1,]
length(df$Status)
factor("Status")
vector("Simul", length = 525)
vector(length = 525)
df$Status <- "Simul"
df$Status
df[1:5,]
convert_output <- function(dir, dataset){
name <- paste(dir, dataset, sep = '')
df <- read.table(name, header = TRUE)
df$Status <- "Simul"
df$gene_id <- df$gene_symbol
filename <- paste("converted_pascal/", dataset, sep = '')
write.table(df, file = filename, quote = FALSE, sep = "\t")
}
convert_output('pvals/', 'phs000007.pha001970.txt_pvals')
convert_output('raw_pascal/', 'phs000007.pha001970.sum.genescores.txt')
data_file = '/Applications/PASCAL/output/GIANT_HEIGHT_Wood_et_al_2014_pvals.sum.genescores.chr22.txt'
df <- read.table(data_file, header = TRUE)
df
df$Status <- "Simul"
df[1:5,]
df$gene_id <- df$gene_symbol
df[1:5,]
write.table(df, file = 'giantheight.txt', quote = FALSE, sep = "\t")
write.table(df, file = 'giantheight.txt', quote = FALSE, sep = "\t", row.names = FALSE)
convert_output <- function(dir, dataset){
name <- paste(dir, dataset, sep = '')
df <- read.table(name, header = TRUE)
df$Status <- "Simul"
df$gene_id <- df$gene_symbol
filename <- paste("converted_pascal/", dataset, sep = '')
write.table(df, file = filename, quote = FALSE, sep = "\t", row.names = FALSE)
}
convert_output('raw_pascal/', 'phs000007.pha001970.sum.genescores.txt')
